libpng: CVE-2015-8126 4

the patch comes from:
https://bugzilla.redhat.com/show_bug.cgi?id=1281756
https://github.com/glennrp/libpng/commit/83f4c735c88e7f451541c1528d8043c31ba3b466

[libpng16] Clean up coding style in png_handle_PLTE()

Signed-off-by: Li Wang <li.wang@windriver.com>
---
 pngrutil.c |   17 ++++++++++-------
 1 file changed, 10 insertions(+), 7 deletions(-)

diff --git a/pngrutil.c b/pngrutil.c
index 92f4d08..aa7844e 100644
--- a/pngrutil.c
+++ b/pngrutil.c
@@ -929,18 +929,21 @@ png_handle_PLTE(png_structrp png_ptr, png_inforp info_ptr, png_uint_32 length)
       return;
    }
 
-   max_palette_length = (png_ptr->color_type == PNG_COLOR_TYPE_PALETTE) ?
-      (1 << png_ptr->bit_depth) : PNG_MAX_PALETTE_LENGTH;
-
    /* The cast is safe because 'length' is less than 3*PNG_MAX_PALETTE_LENGTH */
    num = (int)length / 3;
 
-   /* If the palette has 256 or fewer entries but is too large for the bit depth,
-    * we don't issue an error, to preserve the behavior of previous libpng versions.
-    * We silently truncate the unused extra palette entries here.
+   /* If the palette has 256 or fewer entries but is too large for the bit
+    * depth, we don't issue an error, to preserve the behavior of previous
+    * libpng versions. We silently truncate the unused extra palette entries
+    * here.
     */
+   if (png_ptr->color_type == PNG_COLOR_TYPE_PALETTE)
+      max_palette_length = (1 << png_ptr->bit_depth);
+   else
+      max_palette_length = PNG_MAX_PALETTE_LENGTH;
+
    if (num > max_palette_length)
-     num = max_palette_length;
+      num = max_palette_length;
 
 #ifdef PNG_POINTER_INDEXING_SUPPORTED
    for (i = 0, pal_ptr = palette; i < num; i++, pal_ptr++)
-- 
1.7.9.5

