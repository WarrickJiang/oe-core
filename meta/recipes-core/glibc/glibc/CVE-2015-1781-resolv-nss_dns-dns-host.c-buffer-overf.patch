From c01f1ac20e6d7611ce51a42d22a1f39c44fde91a Mon Sep 17 00:00:00 2001
From: Arjun Shankar <arjun.is@lostca.se>
Date: Tue, 21 Apr 2015 14:06:31 +0200
Subject: [PATCH] CVE-2015-1781: resolv/nss_dns/dns-host.c buffer overflow

Written by: Arjun Shankar <arjun.is@lostca.se>

Arjun Shankar of Red Hat discovered that the nss_dns code does not
adjust the buffer length when the buffer start pointer is aligned.  As a
result, a buffer overflow can occur in the implementation of functions
such as gethostbyname_r, and crafted DNS responses might cause
application crashes or result in arbitrary code execution.

http://www.openwall.com/lists/oss-security/2015/04/21/4

Backported from upstream git(git://sourceware.org/git/glibc.git) as of
commit id 2959eda9272a033863c271aff62095abd01bd4e3.

Signed-off-by: Yuanjie Huang <Yuanjie.Huang@windriver.com>
---
 ChangeLog                 |    6 ++++++
 NEWS                      |    9 ++++++++-
 resolv/nss_dns/dns-host.c |    3 ++-
 3 files changed, 16 insertions(+), 2 deletions(-)

diff --git a/ChangeLog b/ChangeLog
index 735e2af..a33963c 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,3 +1,9 @@
+2015-04-21  Arjun Shankar  <arjun.is@lostca.se>
+
+	[BZ #18287]
+	* resolv/nss_dns/dns-host.c (getanswer_r): Adjust buffer length
+	based on padding.  (CVE-2015-1781)
+
 2015-02-05  Paul Pluzhnikov  <ppluzhnikov@google.com>
 
 	[BZ #16618]
diff --git a/NEWS b/NEWS
index 219ff6c..c42cdab 100644
--- a/NEWS
+++ b/NEWS
@@ -24,7 +24,14 @@ Version 2.20
   17031, 17042, 17048, 17050, 17058, 17061, 17062, 17069, 17075, 17078,
   17079, 17084, 17086, 17088, 17092, 17097, 17125, 17135, 17137, 17150,
   17153, 17187, 17213, 17259, 17261, 17262, 17263, 17319, 17325, 17354,
-  17625, 17630.
+  17625, 17630, 18287.
+
+* A buffer overflow in gethostbyname_r and related functions performing DNS
+  requests has been fixed.  If the NSS functions were called with a
+  misaligned buffer, the buffer length change due to pointer alignment was
+  not taken into account.  This could result in application crashes or,
+  potentially arbitrary code execution, using crafted, but syntactically
+  valid DNS responses.  (CVE-2015-1781)
 
 * CVE-2015-1472 Under certain conditions wscanf can allocate too little
   memory for the to-be-scanned arguments and overflow the allocated
diff --git a/resolv/nss_dns/dns-host.c b/resolv/nss_dns/dns-host.c
index 3258e70..ed99703 100644
--- a/resolv/nss_dns/dns-host.c
+++ b/resolv/nss_dns/dns-host.c
@@ -615,7 +615,8 @@ getanswer_r (const querybuf *answer, int anslen, const char *qname, int qtype,
   int have_to_map = 0;
   uintptr_t pad = -(uintptr_t) buffer % __alignof__ (struct host_data);
   buffer += pad;
-  if (__glibc_unlikely (buflen < sizeof (struct host_data) + pad))
+  buflen = buflen > pad ? buflen - pad : 0;
+  if (__glibc_unlikely (buflen < sizeof (struct host_data)))
     {
       /* The buffer is too small.  */
     too_small:
-- 
1.7.1

