python CVE-2010-3492

the patch come from Python-2.6.4-CVE-2010-3492.diff in
python-2.6.5-2.2mdv2010.1.src.rpm

The asyncore module in Python before 3.2 does not properly handle unsuccessful
calls to the accept function, and does not have accompanying documentation
describing how daemon applications should handle unsuccessful calls to the
accept function, which makes it easier for remote attackers to conduct denial
of service attacks that terminate these applications via network connections.
http://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2010-3492

Integrated-by: Li Wang <li.wang@windriver.com>
---
 Lib/asyncore.py           |    8 +++++++-
 Lib/smtpd.py              |    9 +++------
 Lib/test/test_asyncore.py |    4 +---
 Lib/test/test_ftplib.py   |    3 +--
 Lib/test/test_smtplib.py  |    3 +--
 5 files changed, 13 insertions(+), 14 deletions(-)

diff --git a/Lib/asyncore.py b/Lib/asyncore.py
index 1a623db..a555e0e 100644
--- a/Lib/asyncore.py
+++ b/Lib/asyncore.py
@@ -511,7 +511,13 @@ class dispatcher:
         self.log_info('unhandled connect event', 'warning')
 
     def handle_accept(self):
-        self.log_info('unhandled accept event', 'warning')
+        pair = self.accept()
+        if pair is not None:
+            self.handle_accepted(*pair)
+
+    def handle_accepted(self, sock, addr):
+        sock.close()
+        self.log_info('unhandled accepted event', 'warning')
 
     def handle_close(self):
         self.log_info('unhandled close event', 'warning')
diff --git a/Lib/smtpd.py b/Lib/smtpd.py
index e0544e4..70e773c 100755
--- a/Lib/smtpd.py
+++ b/Lib/smtpd.py
@@ -294,12 +294,9 @@ class SMTPServer(asyncore.dispatcher):
                 self.__class__.__name__, time.ctime(time.time()),
                 localaddr, remoteaddr)
 
-    def handle_accept(self):
-        pair = self.accept()
-        if pair is not None:
-            conn, addr = pair
-            print >> DEBUGSTREAM, 'Incoming connection from %s' % repr(addr)
-            channel = SMTPChannel(self, conn, addr)
+    def handle_accepted(self, conn, addr):
+        print >> DEBUGSTREAM, 'Incoming connection from %s' % repr(addr)
+        channel = SMTPChannel(self, conn, addr)
 
     # API for "doing something useful with the message"
     def process_message(self, peer, mailfrom, rcpttos, data):
diff --git a/Lib/test/test_asyncore.py b/Lib/test/test_asyncore.py
index 7d1a3cb..d6e0723 100644
--- a/Lib/test/test_asyncore.py
+++ b/Lib/test/test_asyncore.py
@@ -295,7 +295,6 @@ class DispatcherTests(unittest.TestCase):
             d.handle_read()
             d.handle_write()
             d.handle_connect()
-            d.handle_accept()
         finally:
             sys.stdout = stdout
 
@@ -303,8 +302,7 @@ class DispatcherTests(unittest.TestCase):
         expected = ['warning: unhandled incoming priority event',
                     'warning: unhandled read event',
                     'warning: unhandled write event',
-                    'warning: unhandled connect event',
-                    'warning: unhandled accept event']
+                    'warning: unhandled connect event']
         self.assertEqual(lines, expected)
 
     def test_issue_8594(self):
diff --git a/Lib/test/test_ftplib.py b/Lib/test/test_ftplib.py
index 9199582..4f537bb 100644
--- a/Lib/test/test_ftplib.py
+++ b/Lib/test/test_ftplib.py
@@ -238,8 +238,7 @@ class DummyFTPServer(asyncore.dispatcher, threading.Thread):
         self.active = False
         self.join()
 
-    def handle_accept(self):
-        conn, addr = self.accept()
+    def handle_accepted(self, conn, addr):
         self.handler = self.handler(conn)
         self.close()
 
diff --git a/Lib/test/test_smtplib.py b/Lib/test/test_smtplib.py
index 42a10be..79e40ab 100644
--- a/Lib/test/test_smtplib.py
+++ b/Lib/test/test_smtplib.py
@@ -376,8 +376,7 @@ class SimSMTPServer(smtpd.SMTPServer):
         self._extra_features = []
         smtpd.SMTPServer.__init__(self, *args, **kw)
 
-    def handle_accept(self):
-        conn, addr = self.accept()
+    def handle_accepted(self, conn, addr):
         self._SMTPchannel = SimSMTPChannel(self._extra_features,
                                            self, conn, addr)
 
-- 
1.7.0.5

