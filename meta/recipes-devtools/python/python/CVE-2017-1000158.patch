From 6ddb35c6203626dc6ca9549d6e70264e93d86166 Mon Sep 17 00:00:00 2001
From: Ovidiu Panait <ovidiu.panait@windriver.com>
Date: Fri, 5 Jan 2018 13:50:01 +0000
Subject: [PATCH] bpo-30657: Check & prevent integer overflow in
 PyString_DecodeEscape (#2174)

Upstream-Status: Backport
CVE: CVE-2017-1000158

Signed-off-by: Ovidiu Panait <ovidiu.panait@windriver.com>
---
 Misc/ACKS              | 1 +
 Objects/stringobject.c | 8 +++++++-
 2 files changed, 8 insertions(+), 1 deletion(-)

diff --git a/Misc/ACKS b/Misc/ACKS
index 9c374b7..eefb4c0 100644
--- a/Misc/ACKS
+++ b/Misc/ACKS
@@ -151,6 +151,7 @@ Gregory Bond
 Matias Bordese
 Jonas BorgstrÃ¶m
 Jurjen Bos
+Jay Bosamiya
 Peter Bosch
 Dan Boswell
 Eric Bouck
diff --git a/Objects/stringobject.c b/Objects/stringobject.c
index f2db6da..5614ad9 100644
--- a/Objects/stringobject.c
+++ b/Objects/stringobject.c
@@ -612,7 +612,13 @@ PyObject *PyString_DecodeEscape(const char *s,
     char *p, *buf;
     const char *end;
     PyObject *v;
-    Py_ssize_t newlen = recode_encoding ? 4*len:len;
+    Py_ssize_t newlen;
+    /* Check for integer overflow */
+    if (recode_encoding && (len > PY_SSIZE_T_MAX / 4)) {
+        PyErr_SetString(PyExc_OverflowError, "string is too large");
+        return NULL;
+    }
+    newlen = recode_encoding ? 4*len:len;
     v = PyString_FromStringAndSize((char *)NULL, newlen);
     if (v == NULL)
         return NULL;
-- 
2.11.0

