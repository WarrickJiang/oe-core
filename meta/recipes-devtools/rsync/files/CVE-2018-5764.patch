From a5efe926f7bf8eae7f5df31ea20723cfad6f38f6 Mon Sep 17 00:00:00 2001
From: Haiqing Bai <Haiqing.Bai@windriver.com>
Date: Mon, 5 Feb 2018 06:21:41 +0000
Subject: [PATCH] Ignore --protect-args when already sent by client

commit 7706303828fcde524222babb2833864a4bd09e07 upstream

In parse_arguments when --protect-args is encountered the function exits
early. The caller is expected to check protect_args, and recall
parse_arguments setting protect_args to 2. This patch prevents the
client from resetting protect_args during the second pass of
parse_arguments. This prevents parse_arguments returning early the
second time before it's able to sanitize the arguments it received.

Signed-off-by: Haiqing Bai <Haiqing.Bai@windriver.com>
---
 options.c | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/options.c b/options.c
index 74239bf..4023ad5 100644
--- a/options.c
+++ b/options.c
@@ -1294,6 +1294,7 @@ int parse_arguments(int *argc_p, const char ***argv_p)
 	const char *arg, **argv = *argv_p;
 	int argc = *argc_p;
 	int opt;
+	int orig_protect_args = protect_args;
 
 	if (ref && *ref)
 		set_refuse_options(ref);
@@ -1903,6 +1904,10 @@ int parse_arguments(int *argc_p, const char ***argv_p)
 	if (fuzzy_basis > 1)
 		fuzzy_basis = basis_dir_cnt + 1;
 
+	/* Don't let the client reset protect_args if it was already processed */
+	if (orig_protect_args == 2 && am_server)
+		protect_args = orig_protect_args;
+
 	if (protect_args == 1 && am_server)
 		return 1;
 
-- 
2.11.0

