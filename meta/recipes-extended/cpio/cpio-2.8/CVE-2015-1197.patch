Bug fix for CVE-2015-1197: when using the --no-absolute-filenames
option, allows local users to write to arbitrary files via a
symlink attack on a file in an archive.

Add a parameter --symlink-ban to forbid any write operation inside
any symbolic link in case of --no-absolute-filenames.

Upstream-Status: Pending

Signed-off-by: Zhang Xiao <xiao.zhang@windriver.com>
---
 doc/cpio.1   |  4 ++--
 src/copyin.c | 45 +++++++++++++++++++++++++++++++++++++++++++++
 src/extern.h |  1 +
 src/global.c |  3 +++
 src/main.c   |  8 +++++++-
 5 files changed, 58 insertions(+), 3 deletions(-)

diff --git a/doc/cpio.1 b/doc/cpio.1
index dc3eb80..5837168 100644
--- a/doc/cpio.1
+++ b/doc/cpio.1
@@ -21,8 +21,8 @@ cpio \- copy files to and from archives
 [\-\-io-size=bytes] [\-\-pattern-file=file] [\-\-format=format]
 [\-\-owner=[user][:.][group]] [\-\-no-preserve-owner] [\-\-message=message]
 [\-\-force\-local] [\-\-no\-absolute\-filenames] [\-\-sparse]
-[\-\-only\-verify\-crc] [\-\-quiet] [\-\-rsh-command=command] [\-\-help]
-[\-\-version] [pattern...] [< archive]
+[\-\-only\-verify\-crc] [\-\-quiet] [\-\-rsh-command=command] [\-\-symlink\-ban]
+[\-\-help] [\-\-version] [pattern...] [< archive]
 
 .B cpio
 {\-p|\-\-pass-through} [\-0adlmuvLV] [\-R [user][:.][group]]
diff --git a/src/copyin.c b/src/copyin.c
index 7aad228..aaae729 100644
--- a/src/copyin.c
+++ b/src/copyin.c
@@ -738,6 +738,7 @@ copyin_device (struct cpio_file_stat* file_hdr)
 		    file_hdr->c_mtime);
 }
 
+
 static void
 copyin_link(struct cpio_file_stat *file_hdr, int in_file_des)
 {
@@ -934,6 +935,42 @@ print_name_with_quoting (register char *p)
     }
 }
 
+/* Check to see if symlink exists in file/path  */
+static int
+symlink_exist(char *file_name)
+{
+  char *lower_path;
+  struct stat buf;
+  char *path_end = file_name;
+
+  if (!file_name || !*file_name)
+    return 0;
+  
+  while ((lower_path = strchr(path_end + 1, '/')) != NULL) {
+    path_end = lower_path;
+    *path_end = '\0';
+
+    if (lstat(file_name, &buf) != 0) {
+      if (errno == ELOOP) {
+        *path_end = '/';
+        return 1;
+      } else {
+        *path_end = '/';
+        return 0;
+      }
+    }
+
+    if (S_ISLNK(buf.st_mode)) {
+      *path_end = '/';
+      return 1;
+    }
+
+    *path_end = '/';
+  }
+
+  return 0;
+}
+
 /* Read a pattern file (for the -E option).  Put a list of
    `num_patterns' elements in `save_patterns'.  Any patterns that were
    already in `save_patterns' (from the command line) are preserved.  */
@@ -1553,6 +1590,14 @@ process_copy_in ()
 	{
 	  /* Copy the input file into the directory structure.  */
 
+          /* Fix for CVE-2015-1197. Add a switch in case of no-absolute-filenames */
+          if (no_abs_paths_flag && symlink_ban)
+            {
+              if (symlink_exist(file_hdr.c_name))
+                  error (1, 0, _("symlink %s detected in case of --no-absolute-filenames"
+                                 " and --symlink-ban\n"), file_hdr.c_name);
+            }
+
 	  /* Do we need to rename the file? */
 	  if (rename_flag || rename_batch_file)
 	    {
diff --git a/src/extern.h b/src/extern.h
index 2bed3ce..a80c69f 100644
--- a/src/extern.h
+++ b/src/extern.h
@@ -98,6 +98,7 @@ extern char output_is_seekable;
 extern char *program_name;
 extern int (*xstat) ();
 extern void (*copy_function) ();
+extern bool symlink_ban;
 
 
 /* copyin.c */
diff --git a/src/global.c b/src/global.c
index 3341e8a..bc19f00 100644
--- a/src/global.c
+++ b/src/global.c
@@ -199,3 +199,6 @@ int (*xstat) ();
 
 /* Which copy operation to perform. (-i, -o, -p) */
 void (*copy_function) () = 0;
+
+/* symlinks are forbidden in case of no-absolute-filenames */
+bool symlink_ban = false;
diff --git a/src/main.c b/src/main.c
index 7581b8f..aa9f758 100644
--- a/src/main.c
+++ b/src/main.c
@@ -55,7 +55,7 @@ enum cpio_options {
   DEBUG_OPTION,                  
   BLOCK_SIZE_OPTION,             
   TO_STDOUT_OPTION,
-  
+  SYMLINK_BAN,
   HANG_OPTION,
   USAGE_OPTION,               
   LICENSE_OPTION,             
@@ -216,6 +216,8 @@ static struct argp_option options[] = {
    N_("Create leading directories where needed"), GRID+1 },
   {"no-preserve-owner", NO_PRESERVE_OWNER_OPTION, 0, 0,
    N_("Do not change the ownership of the files"), GRID+1 },
+  {"symlink-ban", SYMLINK_BAN, 0, 0,
+   N_("Forbid writing inside symbolic link"), GRID+1 },
   {"unconditional", 'u', NULL, 0,
    N_("Replace all files unconditionally"), GRID+1 },
   {"sparse", SPARSE_OPTION, NULL, 0,
@@ -441,6 +443,10 @@ crc newc odc bin ustar tar (all-caps also recognized)"), arg);
       no_chown_flag = true;
       break;
 
+    case SYMLINK_BAN:				/* --symlink-ban */
+      symlink_ban = true;
+      break;
+
     case 'o':		/* Copy-out mode.  */
       if (copy_function != 0)
 	error (PAXEXIT_FAILURE, 0, _("Mode already defined"));
-- 
1.8.5.2.233.g932f7e4

