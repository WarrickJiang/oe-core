r1558 | ph10 | 2015-05-16 01:17:03

Fix buffer overflow for named recursive back reference when the name is 
duplicated.

Upstream-Status: Backport

Signed-off-by: Yue Tao <yue.tao@windriver.com>

Index: testdata/testoutput2
===================================================================
--- a/testdata/testoutput2	(revision 1557)
+++ b/testdata/testoutput2	(revision 1558)
@@ -14454,4 +14454,6 @@
 
 /(((?(R)){0,2}) (?''((?'X')((?'R')))))/
 
+"(?J)(?'d'(?'d'\g{d}))"
+
 /-- End of testinput2 --/
Index: testdata/testinput2
===================================================================
--- a/testdata/testinput2	(revision 1557)
+++ b/testdata/testinput2	(revision 1558)
@@ -4166,4 +4166,6 @@
 
 /(((?(R)){0,2}) (?''((?'X')((?'R')))))/
 
+"(?J)(?'d'(?'d'\g{d}))"
+
 /-- End of testinput2 --/
Index: pcre_compile.c
===================================================================
--- a/pcre_compile.c	(revision 1557)
+++ b/pcre_compile.c	(revision 1558)
@@ -7177,14 +7177,26 @@
           number. If the name is not found, set the value to 0 for a forward
           reference. */
 
+          recno = 0;
           ng = cd->named_groups;
           for (i = 0; i < cd->names_found; i++, ng++)
             {
             if (namelen == ng->length &&
                 STRNCMP_UC_UC(name, ng->name, namelen) == 0)
-              break;
+              {
+              open_capitem *oc;
+              recno = ng->number;
+              if (is_recurse) break;
+              for (oc = cd->open_caps; oc != NULL; oc = oc->next)         
+                {          
+                if (oc->number == recno)                                     
+                  {               
+                  oc->flag = TRUE;                                      
+                  break;
+                  }                                                         
+                }                          
+              }    
             }
-          recno = (i < cd->names_found)? ng->number : 0;
 
           /* Count named back references. */
 
Index: ChangeLog
===================================================================
--- a/ChangeLog	(revision 1557)
+++ b/ChangeLog	(revision 1558)
@@ -5,6 +5,10 @@ ChangeLog for PCRE
     a buffer overflow if there was more than one group with the given name.
     This bug was discovered by the LLVM fuzzer.
     
+4.  A recursive back reference by name within a group that had the same name as
+    another group caused a buffer overflow. For example:
+    /(?J)(?'d'(?'d'\g{d}))/. This bug was discovered by the LLVM fuzzer.
+    
 10. There was a buffer overflow if pcre_exec() was called with an ovector of 
     size 1. This bug was found by american fuzzy lop.
 
